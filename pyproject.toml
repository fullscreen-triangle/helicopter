[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "helicopter"
version = "0.1.0"
description = "Reverse Pakati for Visual Knowledge Extraction"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fullscreen Triangle", email = "dev@fullscreen-triangle.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "diffusers>=0.21.0",
    "accelerate>=0.20.0",
    "opencv-python>=4.8.0",
    "pillow>=9.5.0",
    "scikit-image>=0.20.0",
    "albumentations>=1.3.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "timm>=0.9.0",
    "sentence-transformers>=2.2.0",
    "clip-by-openai>=1.0",
    "tqdm>=4.65.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "omegaconf>=2.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "h5py>=3.9.0",
    "datasets>=2.14.0",
    "jsonlines>=3.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "python-multipart>=0.0.6",
    "wandb>=0.15.0",
    "tensorboard>=2.13.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    "nbsphinx>=0.9.0",
]
experimental = [
    "torch-ngp>=0.1.0",
    "nerfstudio>=0.3.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "optuna>=3.3.0",
    "causal-learn>=0.1.0",
    "dowhy>=0.11.0",
    "torch-geometric>=2.3.0",
    "networkx>=3.1.0",
]

[project.scripts]
helicopter = "helicopter.cli.main:app"
helicopter-server = "helicopter.api.server:main"
helicopter-train = "helicopter.training.cli:app"

[project.urls]
Homepage = "https://github.com/fullscreen-triangle/helicopter"
Documentation = "https://helicopter.readthedocs.io/"
Repository = "https://github.com/fullscreen-triangle/helicopter"
"Bug Tracker" = "https://github.com/fullscreen-triangle/helicopter/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["helicopter*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["helicopter"]
known_third_party = ["torch", "transformers", "diffusers", "PIL", "cv2", "numpy"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "albumentations.*",
    "timm.*",
    "sentence_transformers.*",
    "clip.*",
    "wandb.*",
    "loguru.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["helicopter"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/docs/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
